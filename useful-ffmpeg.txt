###############################################################################
# NAME:             useful-ffmpeg.txt
#
# AUTHOR:           Ethan D. Twardy <edtwardy@mtu.edu>
#
# DESCRIPTION:      Some useful ffmpeg commands
#
# CREATED:          05/05/2019
#
# LAST EDITED:      01/24/2020
###

Transcode FLAC to mp3:
**********************

    This command transcodes the file input.flac to the output file output.mp3,
    at a bit rate of 320k. Metadata in the original file is preserved as best
    as possible.

        ffmpeg -i input.flac -ab 320k -map_metadata 0 -id3v2_version 3 \
               output.mp3

Clip a portion of audio:
************************

    This command takes a six second portion of the file input.mp3 starting at
    ten seconds and places it into the file output.mp3. All file attributes are
    preserved.

        ffmpeg -ss 10 -t 6 -i input.mp3 output.mp3

Add album artwork to an mp3 file:
*********************************

    Add an album artwork stream to an mp3 file. The concept should be similar
    for other codecs, but I haven't ever tried it.

        ffmpeg -i music.mp3 -i artwork.jpg -map 0:0 -map 1:0 \
               -c copy -id3v2_version 3 -metadata:s:v title="Album cover" \
               -metadata:s:v comment="Cover (front)" outputFile.mp3

Convert DVD Rip to mkv:
***********************

    When you rip a DVD, you often end up with two directories:

        AUDIO_TS/
        VIDEO_TS/

    In my experience, AUDIO_TS/ is almost always empty. The other directory
    contains a number of .VOB files, each of which contains a part of the
    movie. It is possible to convert these object files into a single, unified
    Matroska video file; it just takes a few steps.

    The first step is to combine all of the .VOB files into a single .vob file:

        cat *.vob > movie.vob

    This may take a while, because movie.vob will likely be a large file. The
    next step is to identify the streams that movie.vob contains:

        ffmpeg -i movie.vob

    You may encounter a warning like this during the previous invocation:

        [mpeg @ 0x7fe360000000] Could not find codec parameters for stream 3
        (Audio: ac3, 0 channels): unspecified sample format
        Consider increasing the value for the 'analyzeduration' and 'probesize'
        options

    Naturally, the best thing is to do what it says:

        ffmpeg -analyzeduration 500M -probesize 500M -i movie.vob

    The output from this command will be something like the following:

        Input #0, mpeg, from 'movie.vob':
        Duration: 02:00:05.18, start: 0.041500, bitrate: 5059 kb/s
            Stream #0:0[0x1bf]: Data: dvd_nav_packet
            Stream #0:1[0x1e0]: Video: mpeg2video (Main), yuv420p(tv, top
            first), 720x480 [SAR 8:9 DAR 4:3], Closed Captions, 29.97 fps,
            29.97 tbr, 90k tbn, 59.94 tbc
            Stream #0:2[0x80]: Audio: ac3, 48000 Hz, 5.1(side), fltp, 384 kb/s
            Stream #0:3[0x20]: Subtitle: dvd_subtitle
            Stream #0:4[0x82]: Audio: ac3, 48000 Hz, 5.0(side), fltp, 384 kb/s
            Stream #0:5[0x81]: Audio: ac3, 48000 Hz, stereo, fltp, 192 kb/s

    It's from this information that we decide on our final invocation. We can
    see that the stream 0:0 is labelled 'dvd_nav_packet'. Well, since this
    isn't a DVD anymore, we can throw it away.

ffmpeg -i movie.vob -map 0:1 -map 0:2 -codec:v libx264 -crf 21 -codec:a libmp3lame -qscale:a 2 movie.mkv

Change metadata:
****************

    It's important to note that for audio only files, you must replace -codec
    with -acodec

        ffmpeg -i input.avi -metadata key=value -codec copy output.avi

How the map flag actually works:
********************************

    The map flag is position specific. It is used to indicate the mapping
    between input and output streams. Consider the following command:

        ffmpeg -i aFile.mp4 -i anotherOne.aac -map 0:0 -map 0:1 -map 1:0 a.mp4

    The first map flag specifies the source stream for the zeroeth (first)
    stream in the output file, the second flag specifies the first, etc. The
    flags are taken as follows:

        -map 0:0        The first stream in the output file is the first stream
                        in the first input file.
        -map 0:1        The second stream in the output file is the second
                        stream in the first input file.
        -map 1:0        The third stream in the output file is the first stream
                        in the second input file.

How to mix Dolby 5.1 down to stereo:
************************************

    To do this, use the -ac (audio channel) specification. This specification
    cannot be used with the "-coded copy" option.

        ffmpeg -i input.aac -ac 2 output.aac

###############################################################################
